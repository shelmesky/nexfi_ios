// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import <ProtocolBuffers/ProtocolBuffers.h>

// @@protoc_insertion_point(imports)

@class ConnectedFrame;
@class ConnectedFrameBuilder;
@class DisconnectedFrame;
@class DisconnectedFrameBuilder;
@class Frame;
@class FrameBuilder;
@class HeartbeatFrame;
@class HeartbeatFrameBuilder;
@class HelloFrame;
@class HelloFrameBuilder;
@class PayloadFrame;
@class PayloadFrameBuilder;
@class Peer;
@class PeerBuilder;
@class PortsFrame;
@class PortsFrameBuilder;


typedef NS_ENUM(SInt32, FrameKind) {
  FrameKindHello = 1,
  FrameKindHeartbeat = 2,
  FrameKindPayload = 3,
  FrameKindPorts = 4,
  FrameKindConnected = 5,
  FrameKindDisconnected = 6,
};

BOOL FrameKindIsValidValue(FrameKind value);
NSString *NSStringFromFrameKind(FrameKind value);


@interface FramesRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

#define Frame_kind @"kind"
#define Frame_hello @"hello"
#define Frame_heartbeat @"heartbeat"
#define Frame_payload @"payload"
#define Frame_ports @"ports"
#define Frame_connected @"connected"
#define Frame_disconnected @"disconnected"
@interface Frame : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasHello_:1;
  BOOL hasHeartbeat_:1;
  BOOL hasPayload_:1;
  BOOL hasPorts_:1;
  BOOL hasConnected_:1;
  BOOL hasDisconnected_:1;
  BOOL hasKind_:1;
  HelloFrame* hello;
  HeartbeatFrame* heartbeat;
  PayloadFrame* payload;
  PortsFrame* ports;
  ConnectedFrame* connected;
  DisconnectedFrame* disconnected;
  FrameKind kind;
}
- (BOOL) hasKind;
- (BOOL) hasHello;
- (BOOL) hasHeartbeat;
- (BOOL) hasPayload;
- (BOOL) hasPorts;
- (BOOL) hasConnected;
- (BOOL) hasDisconnected;
@property (readonly) FrameKind kind;
@property (readonly, strong) HelloFrame* hello;
@property (readonly, strong) HeartbeatFrame* heartbeat;
@property (readonly, strong) PayloadFrame* payload;
@property (readonly, strong) PortsFrame* ports;
@property (readonly, strong) ConnectedFrame* connected;
@property (readonly, strong) DisconnectedFrame* disconnected;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FrameBuilder*) builder;
+ (FrameBuilder*) builder;
+ (FrameBuilder*) builderWithPrototype:(Frame*) prototype;
- (FrameBuilder*) toBuilder;

+ (Frame*) parseFromData:(NSData*) data;
+ (Frame*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Frame*) parseFromInputStream:(NSInputStream*) input;
+ (Frame*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Frame*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Frame*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FrameBuilder : PBGeneratedMessageBuilder {
@private
  Frame* resultFrame;
}

- (Frame*) defaultInstance;

- (FrameBuilder*) clear;
- (FrameBuilder*) clone;

- (Frame*) build;
- (Frame*) buildPartial;

- (FrameBuilder*) mergeFrom:(Frame*) other;
- (FrameBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FrameBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasKind;
- (FrameKind) kind;
- (FrameBuilder*) setKind:(FrameKind) value;
- (FrameBuilder*) clearKind;

- (BOOL) hasHello;
- (HelloFrame*) hello;
- (FrameBuilder*) setHello:(HelloFrame*) value;
- (FrameBuilder*) setHelloBuilder:(HelloFrameBuilder*) builderForValue;
- (FrameBuilder*) mergeHello:(HelloFrame*) value;
- (FrameBuilder*) clearHello;

- (BOOL) hasHeartbeat;
- (HeartbeatFrame*) heartbeat;
- (FrameBuilder*) setHeartbeat:(HeartbeatFrame*) value;
- (FrameBuilder*) setHeartbeatBuilder:(HeartbeatFrameBuilder*) builderForValue;
- (FrameBuilder*) mergeHeartbeat:(HeartbeatFrame*) value;
- (FrameBuilder*) clearHeartbeat;

- (BOOL) hasPayload;
- (PayloadFrame*) payload;
- (FrameBuilder*) setPayload:(PayloadFrame*) value;
- (FrameBuilder*) setPayloadBuilder:(PayloadFrameBuilder*) builderForValue;
- (FrameBuilder*) mergePayload:(PayloadFrame*) value;
- (FrameBuilder*) clearPayload;

- (BOOL) hasPorts;
- (PortsFrame*) ports;
- (FrameBuilder*) setPorts:(PortsFrame*) value;
- (FrameBuilder*) setPortsBuilder:(PortsFrameBuilder*) builderForValue;
- (FrameBuilder*) mergePorts:(PortsFrame*) value;
- (FrameBuilder*) clearPorts;

- (BOOL) hasConnected;
- (ConnectedFrame*) connected;
- (FrameBuilder*) setConnected:(ConnectedFrame*) value;
- (FrameBuilder*) setConnectedBuilder:(ConnectedFrameBuilder*) builderForValue;
- (FrameBuilder*) mergeConnected:(ConnectedFrame*) value;
- (FrameBuilder*) clearConnected;

- (BOOL) hasDisconnected;
- (DisconnectedFrame*) disconnected;
- (FrameBuilder*) setDisconnected:(DisconnectedFrame*) value;
- (FrameBuilder*) setDisconnectedBuilder:(DisconnectedFrameBuilder*) builderForValue;
- (FrameBuilder*) mergeDisconnected:(DisconnectedFrame*) value;
- (FrameBuilder*) clearDisconnected;
@end

#define Peer_address @"address"
#define Peer_legacy @"legacy"
#define Peer_ports @"ports"
@interface Peer : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasLegacy_:1;
  BOOL hasAddress_:1;
  BOOL legacy_:1;
  NSData* address;
  PBAppendableArray * portsArray;
}
- (BOOL) hasAddress;
- (BOOL) hasLegacy;
@property (readonly, strong) NSData* address;
- (BOOL) legacy;
@property (readonly, strong) PBArray * ports;
- (SInt32)portsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PeerBuilder*) builder;
+ (PeerBuilder*) builder;
+ (PeerBuilder*) builderWithPrototype:(Peer*) prototype;
- (PeerBuilder*) toBuilder;

+ (Peer*) parseFromData:(NSData*) data;
+ (Peer*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Peer*) parseFromInputStream:(NSInputStream*) input;
+ (Peer*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Peer*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Peer*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PeerBuilder : PBGeneratedMessageBuilder {
@private
  Peer* resultPeer;
}

- (Peer*) defaultInstance;

- (PeerBuilder*) clear;
- (PeerBuilder*) clone;

- (Peer*) build;
- (Peer*) buildPartial;

- (PeerBuilder*) mergeFrom:(Peer*) other;
- (PeerBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PeerBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAddress;
- (NSData*) address;
- (PeerBuilder*) setAddress:(NSData*) value;
- (PeerBuilder*) clearAddress;

- (BOOL) hasLegacy;
- (BOOL) legacy;
- (PeerBuilder*) setLegacy:(BOOL) value;
- (PeerBuilder*) clearLegacy;

- (PBAppendableArray *)ports;
- (SInt32)portsAtIndex:(NSUInteger)index;
- (PeerBuilder *)addPorts:(SInt32)value;
- (PeerBuilder *)setPortsArray:(NSArray *)array;
- (PeerBuilder *)setPortsValues:(const SInt32 *)values count:(NSUInteger)count;
- (PeerBuilder *)clearPorts;
@end

#define HelloFrame_nodeId @"nodeId"
#define HelloFrame_peer @"peer"
@interface HelloFrame : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasNodeId_:1;
  BOOL hasPeer_:1;
  SInt64 nodeId;
  Peer* peer;
}
- (BOOL) hasNodeId;
- (BOOL) hasPeer;
@property (readonly) SInt64 nodeId;
@property (readonly, strong) Peer* peer;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (HelloFrameBuilder*) builder;
+ (HelloFrameBuilder*) builder;
+ (HelloFrameBuilder*) builderWithPrototype:(HelloFrame*) prototype;
- (HelloFrameBuilder*) toBuilder;

+ (HelloFrame*) parseFromData:(NSData*) data;
+ (HelloFrame*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (HelloFrame*) parseFromInputStream:(NSInputStream*) input;
+ (HelloFrame*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (HelloFrame*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (HelloFrame*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface HelloFrameBuilder : PBGeneratedMessageBuilder {
@private
  HelloFrame* resultHelloFrame;
}

- (HelloFrame*) defaultInstance;

- (HelloFrameBuilder*) clear;
- (HelloFrameBuilder*) clone;

- (HelloFrame*) build;
- (HelloFrame*) buildPartial;

- (HelloFrameBuilder*) mergeFrom:(HelloFrame*) other;
- (HelloFrameBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (HelloFrameBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasNodeId;
- (SInt64) nodeId;
- (HelloFrameBuilder*) setNodeId:(SInt64) value;
- (HelloFrameBuilder*) clearNodeId;

- (BOOL) hasPeer;
- (Peer*) peer;
- (HelloFrameBuilder*) setPeer:(Peer*) value;
- (HelloFrameBuilder*) setPeerBuilder:(PeerBuilder*) builderForValue;
- (HelloFrameBuilder*) mergePeer:(Peer*) value;
- (HelloFrameBuilder*) clearPeer;
@end

@interface HeartbeatFrame : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
}

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (HeartbeatFrameBuilder*) builder;
+ (HeartbeatFrameBuilder*) builder;
+ (HeartbeatFrameBuilder*) builderWithPrototype:(HeartbeatFrame*) prototype;
- (HeartbeatFrameBuilder*) toBuilder;

+ (HeartbeatFrame*) parseFromData:(NSData*) data;
+ (HeartbeatFrame*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (HeartbeatFrame*) parseFromInputStream:(NSInputStream*) input;
+ (HeartbeatFrame*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (HeartbeatFrame*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (HeartbeatFrame*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface HeartbeatFrameBuilder : PBGeneratedMessageBuilder {
@private
  HeartbeatFrame* resultHeartbeatFrame;
}

- (HeartbeatFrame*) defaultInstance;

- (HeartbeatFrameBuilder*) clear;
- (HeartbeatFrameBuilder*) clone;

- (HeartbeatFrame*) build;
- (HeartbeatFrame*) buildPartial;

- (HeartbeatFrameBuilder*) mergeFrom:(HeartbeatFrame*) other;
- (HeartbeatFrameBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (HeartbeatFrameBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

#define PayloadFrame_payload @"payload"
@interface PayloadFrame : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasPayload_:1;
  NSData* payload;
}
- (BOOL) hasPayload;
@property (readonly, strong) NSData* payload;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PayloadFrameBuilder*) builder;
+ (PayloadFrameBuilder*) builder;
+ (PayloadFrameBuilder*) builderWithPrototype:(PayloadFrame*) prototype;
- (PayloadFrameBuilder*) toBuilder;

+ (PayloadFrame*) parseFromData:(NSData*) data;
+ (PayloadFrame*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PayloadFrame*) parseFromInputStream:(NSInputStream*) input;
+ (PayloadFrame*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PayloadFrame*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PayloadFrame*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PayloadFrameBuilder : PBGeneratedMessageBuilder {
@private
  PayloadFrame* resultPayloadFrame;
}

- (PayloadFrame*) defaultInstance;

- (PayloadFrameBuilder*) clear;
- (PayloadFrameBuilder*) clone;

- (PayloadFrame*) build;
- (PayloadFrame*) buildPartial;

- (PayloadFrameBuilder*) mergeFrom:(PayloadFrame*) other;
- (PayloadFrameBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PayloadFrameBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPayload;
- (NSData*) payload;
- (PayloadFrameBuilder*) setPayload:(NSData*) value;
- (PayloadFrameBuilder*) clearPayload;
@end

#define PortsFrame_address @"address"
#define PortsFrame_ports @"ports"
@interface PortsFrame : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasAddress_:1;
  NSData* address;
  PBAppendableArray * portsArray;
}
- (BOOL) hasAddress;
@property (readonly, strong) NSData* address;
@property (readonly, strong) PBArray * ports;
- (SInt32)portsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PortsFrameBuilder*) builder;
+ (PortsFrameBuilder*) builder;
+ (PortsFrameBuilder*) builderWithPrototype:(PortsFrame*) prototype;
- (PortsFrameBuilder*) toBuilder;

+ (PortsFrame*) parseFromData:(NSData*) data;
+ (PortsFrame*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PortsFrame*) parseFromInputStream:(NSInputStream*) input;
+ (PortsFrame*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PortsFrame*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PortsFrame*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PortsFrameBuilder : PBGeneratedMessageBuilder {
@private
  PortsFrame* resultPortsFrame;
}

- (PortsFrame*) defaultInstance;

- (PortsFrameBuilder*) clear;
- (PortsFrameBuilder*) clone;

- (PortsFrame*) build;
- (PortsFrame*) buildPartial;

- (PortsFrameBuilder*) mergeFrom:(PortsFrame*) other;
- (PortsFrameBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PortsFrameBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAddress;
- (NSData*) address;
- (PortsFrameBuilder*) setAddress:(NSData*) value;
- (PortsFrameBuilder*) clearAddress;

- (PBAppendableArray *)ports;
- (SInt32)portsAtIndex:(NSUInteger)index;
- (PortsFrameBuilder *)addPorts:(SInt32)value;
- (PortsFrameBuilder *)setPortsArray:(NSArray *)array;
- (PortsFrameBuilder *)setPortsValues:(const SInt32 *)values count:(NSUInteger)count;
- (PortsFrameBuilder *)clearPorts;
@end

#define ConnectedFrame_peer @"peer"
@interface ConnectedFrame : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasPeer_:1;
  Peer* peer;
}
- (BOOL) hasPeer;
@property (readonly, strong) Peer* peer;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ConnectedFrameBuilder*) builder;
+ (ConnectedFrameBuilder*) builder;
+ (ConnectedFrameBuilder*) builderWithPrototype:(ConnectedFrame*) prototype;
- (ConnectedFrameBuilder*) toBuilder;

+ (ConnectedFrame*) parseFromData:(NSData*) data;
+ (ConnectedFrame*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ConnectedFrame*) parseFromInputStream:(NSInputStream*) input;
+ (ConnectedFrame*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ConnectedFrame*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ConnectedFrame*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ConnectedFrameBuilder : PBGeneratedMessageBuilder {
@private
  ConnectedFrame* resultConnectedFrame;
}

- (ConnectedFrame*) defaultInstance;

- (ConnectedFrameBuilder*) clear;
- (ConnectedFrameBuilder*) clone;

- (ConnectedFrame*) build;
- (ConnectedFrame*) buildPartial;

- (ConnectedFrameBuilder*) mergeFrom:(ConnectedFrame*) other;
- (ConnectedFrameBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ConnectedFrameBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPeer;
- (Peer*) peer;
- (ConnectedFrameBuilder*) setPeer:(Peer*) value;
- (ConnectedFrameBuilder*) setPeerBuilder:(PeerBuilder*) builderForValue;
- (ConnectedFrameBuilder*) mergePeer:(Peer*) value;
- (ConnectedFrameBuilder*) clearPeer;
@end

#define DisconnectedFrame_address @"address"
@interface DisconnectedFrame : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasAddress_:1;
  NSData* address;
}
- (BOOL) hasAddress;
@property (readonly, strong) NSData* address;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (DisconnectedFrameBuilder*) builder;
+ (DisconnectedFrameBuilder*) builder;
+ (DisconnectedFrameBuilder*) builderWithPrototype:(DisconnectedFrame*) prototype;
- (DisconnectedFrameBuilder*) toBuilder;

+ (DisconnectedFrame*) parseFromData:(NSData*) data;
+ (DisconnectedFrame*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DisconnectedFrame*) parseFromInputStream:(NSInputStream*) input;
+ (DisconnectedFrame*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DisconnectedFrame*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (DisconnectedFrame*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface DisconnectedFrameBuilder : PBGeneratedMessageBuilder {
@private
  DisconnectedFrame* resultDisconnectedFrame;
}

- (DisconnectedFrame*) defaultInstance;

- (DisconnectedFrameBuilder*) clear;
- (DisconnectedFrameBuilder*) clone;

- (DisconnectedFrame*) build;
- (DisconnectedFrame*) buildPartial;

- (DisconnectedFrameBuilder*) mergeFrom:(DisconnectedFrame*) other;
- (DisconnectedFrameBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (DisconnectedFrameBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAddress;
- (NSData*) address;
- (DisconnectedFrameBuilder*) setAddress:(NSData*) value;
- (DisconnectedFrameBuilder*) clearAddress;
@end


// @@protoc_insertion_point(global_scope)
